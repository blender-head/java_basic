package org.blenderhead.chapter14;

//A simple generic class hierarchy. 
class Gen<T> {  
T ob; 
 
Gen(T o) {  
 ob = o;  
}  

// Return ob.  
T getob() {  
 return ob;  
}  
}  

//A subclass of Gen. 
class Gen2<T> extends Gen<T> { 
Gen2(T o) { 
 super(o); 
} 
}

listing 13
//A subclass can add its own type parameters. 
class Gen<T> {  
T ob; // declare an object of type T  
 
// Pass the constructor a reference to   
// an object of type T.  
Gen(T o) {  
 ob = o;  
}  

// Return ob.  
T getob() {  
 return ob;  
}  
}  

//A subclass of Gen that defines a second 
//type parameter, called V. 
class Gen2<T, V> extends Gen<T> { 
V ob2; 

Gen2(T o, V o2) { 
 super(o); 
 ob2 = o2; 
} 

V getob2() { 
 return ob2; 
} 
} 

public class HierDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
