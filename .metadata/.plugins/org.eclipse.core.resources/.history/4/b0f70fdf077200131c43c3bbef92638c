package org.blenderhead.chapter8;

//A complete implementation of BoxWeight.
class Box2 {
	private double width;
	private double height;
	private double depth;
	
	// construct clone of an object
	Box2(Box2 ob) { // pass object to constructor
		 width = ob.width;
		 height = ob.height;
		 depth = ob.depth;
	}
	
	// constructor used when all dimensions specified
	Box2(double w, double h, double d) {
		 width = w;
		 height = h;
		 depth = d;
	}
	
	// constructor used when no dimensions specified
	Box2() {
		 width = -1;  // use -1 to indicate
		 height = -1; // an uninitialized
		 depth = -1;  // box
	}
	
	// constructor used when cube is created
	Box2(double len) {
		width = height = depth = len;
	}
	
	// compute and return volume
	double volume() {
		return width * height * depth;
	}
}

//BoxWeight now fully implements all constructors.
class BoxWeight2 extends Box {
	double weight; // weight of box
	
	// construct clone of an object
	BoxWeight2(BoxWeight2 ob) { // pass object to constructor
		 super(ob);
		 weight = ob.weight;
	}
	
	// constructor when all parameters are specified
	BoxWeight(double w, double h, double d, double m) {
		 super(w, h, d); // call superclass constructor
		 weight = m;
	}    
	
	// default constructor
	BoxWeight() {
		 super();
		 weight = -1;
	}
	
	// constructor used when cube is created
	BoxWeight(double len, double m) {
		 super(len);
		 weight = m;
	}
}

public class DemoSuper {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
